---
import { getMedia } from "../../../lib/api";
import ContentCard from "./ContentCard.astro";

const {
  title,
  title_en,
  h_type,
  h_class,
  introduction,
  introduction_en,
  bg_color,
  items,
  show_top_border,
  columns_count,
  object_fit,
} = Astro.props.data;

const TitleTag = h_type;
---

<div
  class:list={[
    "f-layout",
    { "f-layout--has-border-top": show_top_border },
    "f-content-cards-grid",
    `cols-${columns_count}`,
    `bg-${bg_color}`,
  ]}
>
  <div class="l-container">
    <div class="f-layout__header">
      <div class="f-layout__titles">
        {
          title && (
            <TitleTag
              class:list={[
                "f-layout__title",
                "f-content-cards-grid__title",
                "a-line-ttb",
                h_class,
              ]}
            >
              {title}
            </TitleTag>
          )
        }

        {title_en && <div class="f-layout__title-en a-fade-in">{title_en}</div>}
      </div>
      {
        introduction && (
          <div class="f-layout__introductions">
            <div class="f-layout__introduction wysiwyg body-md a-fade-in">
              {introduction}
            </div>
            {introduction_en && (
              <div class="f-layout__introduction-en wysiwyg body-md a-fade-in">
                {introduction_en}
              </div>
            )}
          </div>
        )
      }
    </div>

    {
      items && (
        <div class="f-content-cards-grid__items">
          {items.map((item) => (
            <ContentCard
              title={item.title}
              text={item.text}
              imageId={item.image}
              objectFit={object_fit}
              colsCount={columns_count}
              button={item.button}
            />
          ))}
        </div>
      )
    }
  </div>
</div>

<style lang="scss">
  @use "../../../styles/base/_variables.scss" as *;
  @use "../../../styles/base/_mixins" as *;

  .f-content-cards-grid {
    position: relative;

    .l-container:first-child {
      padding-bottom: 0;
    }

    &__item {
      margin-bottom: 30px;
    }

    &__item:last-child {
      margin-bottom: 0;
    }

    @include media-breakpoint-up(md) {
      padding-bottom: 10px;

      &__items {
        display: grid;
        gap: 15px;
      }

      &__item:last-child {
        margin-bottom: 30px;
      }

      &.cols-2 &__items {
        grid-template-columns: repeat(2, minmax(0, 1fr));
      }

      &.cols-3 &__items {
        grid-template-columns: repeat(3, minmax(0, 1fr));
      }

      &__item {
        margin-bottom: 0;
      }
    }
  }
</style>

<script>
  import gsap from "gsap";

  const layoutClass = ".f-content-cards-grid";
  const layouts = document.querySelectorAll(layoutClass);

  [...layouts].forEach((layout) => {
    let tl = gsap.timeline({
      scrollTrigger: {
        trigger: layout.querySelector(`${layoutClass} .l-container`),
        start: "top 80%",
        // markers: true
      },
    });

    let delay = 0.4; // initial delay value, incremented for each element

    if (layout.querySelectorAll(`${layoutClass} .c-content-card`)) {
      let colorCardCarousel = layout.querySelectorAll(
        `${layoutClass} .c-content-card`
      );

      colorCardCarousel.forEach((dropdownslistItem) => {
        tl.add(function () {
          dropdownslistItem.classList.add("is-inview");
        }, delay);
        delay += 0.12;
      });
    }
  });
</script>
